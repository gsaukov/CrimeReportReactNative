/*
 * This file is generated by jOOQ.
 */
package au.edu.unimelb.crbilby.db.tables.records;


import au.edu.unimelb.crbilby.db.tables.CaseAssign;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * The table <code>cr_db.case_assign</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CaseAssignRecord extends UpdatableRecordImpl<CaseAssignRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = 1022854658;

    /**
     * Setter for <code>cr_db.case_assign.case</code>.
     */
    public void setCase(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>cr_db.case_assign.case</code>.
     */
    public Integer getCase() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>cr_db.case_assign.profile</code>.
     */
    public void setProfile(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>cr_db.case_assign.profile</code>.
     */
    public String getProfile() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return CaseAssign.CASE_ASSIGN.CASE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return CaseAssign.CASE_ASSIGN.PROFILE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getCase();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getProfile();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getCase();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getProfile();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CaseAssignRecord value1(Integer value) {
        setCase(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CaseAssignRecord value2(String value) {
        setProfile(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CaseAssignRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CaseAssignRecord
     */
    public CaseAssignRecord() {
        super(CaseAssign.CASE_ASSIGN);
    }

    /**
     * Create a detached, initialised CaseAssignRecord
     */
    public CaseAssignRecord(Integer case_, String profile) {
        super(CaseAssign.CASE_ASSIGN);

        set(0, case_);
        set(1, profile);
    }
}
