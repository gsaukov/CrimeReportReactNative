/*
 * This file is generated by jOOQ.
 */
package au.edu.unimelb.crbilby.db.tables;


import au.edu.unimelb.crbilby.db.CrDb;
import au.edu.unimelb.crbilby.db.tables.records.CaseAssignRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.TableImpl;


/**
 * The table <code>cr_db.case_assign</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CaseAssign extends TableImpl<CaseAssignRecord> {

    private static final long serialVersionUID = 638708629;

    /**
     * The reference instance of <code>cr_db.case_assign</code>
     */
    public static final CaseAssign CASE_ASSIGN = new CaseAssign();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CaseAssignRecord> getRecordType() {
        return CaseAssignRecord.class;
    }

    /**
     * The column <code>cr_db.case_assign.case</code>.
     */
    public final TableField<CaseAssignRecord, Integer> CASE = createField("case", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>cr_db.case_assign.profile</code>.
     */
    public final TableField<CaseAssignRecord, String> PROFILE = createField("profile", org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * Create a <code>cr_db.case_assign</code> table reference
     */
    public CaseAssign() {
        this(DSL.name("case_assign"), null);
    }

    /**
     * Create an aliased <code>cr_db.case_assign</code> table reference
     */
    public CaseAssign(String alias) {
        this(DSL.name(alias), CASE_ASSIGN);
    }

    /**
     * Create an aliased <code>cr_db.case_assign</code> table reference
     */
    public CaseAssign(Name alias) {
        this(alias, CASE_ASSIGN);
    }

    private CaseAssign(Name alias, Table<CaseAssignRecord> aliased) {
        this(alias, aliased, null);
    }

    private CaseAssign(Name alias, Table<CaseAssignRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CrDb.CR_DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CaseAssignRecord> getPrimaryKey() {
        return Internal.createUniqueKey(au.edu.unimelb.crbilby.db.tables.CaseAssign.CASE_ASSIGN, "KEY_case_assign_PRIMARY", au.edu.unimelb.crbilby.db.tables.CaseAssign.CASE_ASSIGN.CASE, au.edu.unimelb.crbilby.db.tables.CaseAssign.CASE_ASSIGN.PROFILE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CaseAssignRecord>> getKeys() {
        return Arrays.<UniqueKey<CaseAssignRecord>>asList(
              Internal.createUniqueKey(au.edu.unimelb.crbilby.db.tables.CaseAssign.CASE_ASSIGN, "KEY_case_assign_PRIMARY", au.edu.unimelb.crbilby.db.tables.CaseAssign.CASE_ASSIGN.CASE, au.edu.unimelb.crbilby.db.tables.CaseAssign.CASE_ASSIGN.PROFILE)
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CaseAssign as(String alias) {
        return new CaseAssign(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CaseAssign as(Name alias) {
        return new CaseAssign(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CaseAssign rename(String name) {
        return new CaseAssign(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CaseAssign rename(Name name) {
        return new CaseAssign(name, null);
    }
}
