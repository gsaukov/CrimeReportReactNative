/*
 * This file is generated by jOOQ.
 */
package au.edu.unimelb.crbilby.db.tables.records;


import au.edu.unimelb.crbilby.db.tables.EscalateLevel;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * The table <code>cr_db.Escalate_level</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EscalateLevelRecord extends UpdatableRecordImpl<EscalateLevelRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = -1959957961;

    /**
     * Setter for <code>cr_db.Escalate_level.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>cr_db.Escalate_level.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>cr_db.Escalate_level.level</code>.
     */
    public void setLevel(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>cr_db.Escalate_level.level</code>.
     */
    public String getLevel() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return EscalateLevel.ESCALATE_LEVEL.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return EscalateLevel.ESCALATE_LEVEL.LEVEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getLevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getLevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EscalateLevelRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EscalateLevelRecord value2(String value) {
        setLevel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EscalateLevelRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EscalateLevelRecord
     */
    public EscalateLevelRecord() {
        super(EscalateLevel.ESCALATE_LEVEL);
    }

    /**
     * Create a detached, initialised EscalateLevelRecord
     */
    public EscalateLevelRecord(Integer id, String level) {
        super(EscalateLevel.ESCALATE_LEVEL);

        set(0, id);
        set(1, level);
    }
}
