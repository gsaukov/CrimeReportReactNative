/*
 * This file is generated by jOOQ.
 */
package au.edu.unimelb.crbilby.db.tables.daos;


import au.edu.unimelb.crbilby.db.tables.EscalateLevel;
import au.edu.unimelb.crbilby.db.tables.records.EscalateLevelRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * The table <code>cr_db.Escalate_level</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EscalateLevelDao extends DAOImpl<EscalateLevelRecord, au.edu.unimelb.crbilby.db.tables.pojos.EscalateLevel, Integer> {

    /**
     * Create a new EscalateLevelDao without any configuration
     */
    public EscalateLevelDao() {
        super(EscalateLevel.ESCALATE_LEVEL, au.edu.unimelb.crbilby.db.tables.pojos.EscalateLevel.class);
    }

    /**
     * Create a new EscalateLevelDao with an attached configuration
     */
    public EscalateLevelDao(Configuration configuration) {
        super(EscalateLevel.ESCALATE_LEVEL, au.edu.unimelb.crbilby.db.tables.pojos.EscalateLevel.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(au.edu.unimelb.crbilby.db.tables.pojos.EscalateLevel object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<au.edu.unimelb.crbilby.db.tables.pojos.EscalateLevel> fetchById(Integer... values) {
        return fetch(EscalateLevel.ESCALATE_LEVEL.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public au.edu.unimelb.crbilby.db.tables.pojos.EscalateLevel fetchOneById(Integer value) {
        return fetchOne(EscalateLevel.ESCALATE_LEVEL.ID, value);
    }

    /**
     * Fetch records that have <code>level IN (values)</code>
     */
    public List<au.edu.unimelb.crbilby.db.tables.pojos.EscalateLevel> fetchByLevel(String... values) {
        return fetch(EscalateLevel.ESCALATE_LEVEL.LEVEL, values);
    }
}
