/*
 * This file is generated by jOOQ.
 */
package au.edu.unimelb.crbilby.db.tables;


import au.edu.unimelb.crbilby.db.CrDb;
import au.edu.unimelb.crbilby.db.tables.records.LeaPostRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.TableImpl;


/**
 * The table <code>cr_db.lea_post</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LeaPost extends TableImpl<LeaPostRecord> {

    private static final long serialVersionUID = 465402295;

    /**
     * The reference instance of <code>cr_db.lea_post</code>
     */
    public static final LeaPost LEA_POST = new LeaPost();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LeaPostRecord> getRecordType() {
        return LeaPostRecord.class;
    }

    /**
     * The column <code>cr_db.lea_post.profile</code>.
     */
    public final TableField<LeaPostRecord, String> PROFILE = createField("profile", org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>cr_db.lea_post.post</code>.
     */
    public final TableField<LeaPostRecord, Integer> POST = createField("post", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>cr_db.lea_post</code> table reference
     */
    public LeaPost() {
        this(DSL.name("lea_post"), null);
    }

    /**
     * Create an aliased <code>cr_db.lea_post</code> table reference
     */
    public LeaPost(String alias) {
        this(DSL.name(alias), LEA_POST);
    }

    /**
     * Create an aliased <code>cr_db.lea_post</code> table reference
     */
    public LeaPost(Name alias) {
        this(alias, LEA_POST);
    }

    private LeaPost(Name alias, Table<LeaPostRecord> aliased) {
        this(alias, aliased, null);
    }

    private LeaPost(Name alias, Table<LeaPostRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CrDb.CR_DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LeaPostRecord> getPrimaryKey() {
        return Internal.createUniqueKey(au.edu.unimelb.crbilby.db.tables.LeaPost.LEA_POST, "KEY_lea_post_PRIMARY", au.edu.unimelb.crbilby.db.tables.LeaPost.LEA_POST.PROFILE, au.edu.unimelb.crbilby.db.tables.LeaPost.LEA_POST.POST);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LeaPostRecord>> getKeys() {
        return Arrays.<UniqueKey<LeaPostRecord>>asList(
              Internal.createUniqueKey(au.edu.unimelb.crbilby.db.tables.LeaPost.LEA_POST, "KEY_lea_post_PRIMARY", au.edu.unimelb.crbilby.db.tables.LeaPost.LEA_POST.PROFILE, au.edu.unimelb.crbilby.db.tables.LeaPost.LEA_POST.POST)
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LeaPost as(String alias) {
        return new LeaPost(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LeaPost as(Name alias) {
        return new LeaPost(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LeaPost rename(String name) {
        return new LeaPost(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LeaPost rename(Name name) {
        return new LeaPost(name, null);
    }
}
