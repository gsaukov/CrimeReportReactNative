/*
 * This file is generated by jOOQ.
 */
package au.edu.unimelb.crbilby.db.tables;


import au.edu.unimelb.crbilby.db.CrDb;
import au.edu.unimelb.crbilby.db.tables.records.PostRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.TableImpl;


/**
 * The table <code>cr_db.post</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Post extends TableImpl<PostRecord> {

    private static final long serialVersionUID = 1498216447;

    /**
     * The reference instance of <code>cr_db.post</code>
     */
    public static final Post POST = new Post();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PostRecord> getRecordType() {
        return PostRecord.class;
    }

    /**
     * The column <code>cr_db.post.id</code>.
     */
    public final TableField<PostRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>cr_db.post.name</code>.
     */
    public final TableField<PostRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>cr_db.post.escalate_lvl</code>.
     */
    public final TableField<PostRecord, Integer> ESCALATE_LVL = createField("escalate_lvl", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>cr_db.post.chief</code>.
     */
    public final TableField<PostRecord, String> CHIEF = createField("chief", org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * Create a <code>cr_db.post</code> table reference
     */
    public Post() {
        this(DSL.name("post"), null);
    }

    /**
     * Create an aliased <code>cr_db.post</code> table reference
     */
    public Post(String alias) {
        this(DSL.name(alias), POST);
    }

    /**
     * Create an aliased <code>cr_db.post</code> table reference
     */
    public Post(Name alias) {
        this(alias, POST);
    }

    private Post(Name alias, Table<PostRecord> aliased) {
        this(alias, aliased, null);
    }

    private Post(Name alias, Table<PostRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CrDb.CR_DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PostRecord, Integer> getIdentity() {
        return Internal.createIdentity(au.edu.unimelb.crbilby.db.tables.Post.POST, au.edu.unimelb.crbilby.db.tables.Post.POST.ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PostRecord> getPrimaryKey() {
        return Internal.createUniqueKey(au.edu.unimelb.crbilby.db.tables.Post.POST, "KEY_post_PRIMARY", au.edu.unimelb.crbilby.db.tables.Post.POST.ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PostRecord>> getKeys() {
        return Arrays.<UniqueKey<PostRecord>>asList(
              Internal.createUniqueKey(au.edu.unimelb.crbilby.db.tables.Post.POST, "KEY_post_PRIMARY", au.edu.unimelb.crbilby.db.tables.Post.POST.ID)
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Post as(String alias) {
        return new Post(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Post as(Name alias) {
        return new Post(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Post rename(String name) {
        return new Post(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Post rename(Name name) {
        return new Post(name, null);
    }
}
