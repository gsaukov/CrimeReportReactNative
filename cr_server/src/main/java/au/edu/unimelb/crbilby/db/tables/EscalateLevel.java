/*
 * This file is generated by jOOQ.
 */
package au.edu.unimelb.crbilby.db.tables;


import au.edu.unimelb.crbilby.db.CrDb;
import au.edu.unimelb.crbilby.db.tables.records.EscalateLevelRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.TableImpl;


/**
 * The table <code>cr_db.Escalate_level</code>.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EscalateLevel extends TableImpl<EscalateLevelRecord> {

    private static final long serialVersionUID = -1356472711;

    /**
     * The reference instance of <code>cr_db.Escalate_level</code>
     */
    public static final EscalateLevel ESCALATE_LEVEL = new EscalateLevel();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EscalateLevelRecord> getRecordType() {
        return EscalateLevelRecord.class;
    }

    /**
     * The column <code>cr_db.Escalate_level.id</code>.
     */
    public final TableField<EscalateLevelRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>cr_db.Escalate_level.level</code>.
     */
    public final TableField<EscalateLevelRecord, String> LEVEL = createField("level", org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * Create a <code>cr_db.Escalate_level</code> table reference
     */
    public EscalateLevel() {
        this(DSL.name("Escalate_level"), null);
    }

    /**
     * Create an aliased <code>cr_db.Escalate_level</code> table reference
     */
    public EscalateLevel(String alias) {
        this(DSL.name(alias), ESCALATE_LEVEL);
    }

    /**
     * Create an aliased <code>cr_db.Escalate_level</code> table reference
     */
    public EscalateLevel(Name alias) {
        this(alias, ESCALATE_LEVEL);
    }

    private EscalateLevel(Name alias, Table<EscalateLevelRecord> aliased) {
        this(alias, aliased, null);
    }

    private EscalateLevel(Name alias, Table<EscalateLevelRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CrDb.CR_DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EscalateLevelRecord, Integer> getIdentity() {
        return Internal.createIdentity(au.edu.unimelb.crbilby.db.tables.EscalateLevel.ESCALATE_LEVEL, au.edu.unimelb.crbilby.db.tables.EscalateLevel.ESCALATE_LEVEL.ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EscalateLevelRecord> getPrimaryKey() {
        return Internal.createUniqueKey(au.edu.unimelb.crbilby.db.tables.EscalateLevel.ESCALATE_LEVEL, "KEY_Escalate_level_PRIMARY", au.edu.unimelb.crbilby.db.tables.EscalateLevel.ESCALATE_LEVEL.ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EscalateLevelRecord>> getKeys() {
        return Arrays.<UniqueKey<EscalateLevelRecord>>asList(
              Internal.createUniqueKey(au.edu.unimelb.crbilby.db.tables.EscalateLevel.ESCALATE_LEVEL, "KEY_Escalate_level_PRIMARY", au.edu.unimelb.crbilby.db.tables.EscalateLevel.ESCALATE_LEVEL.ID)
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EscalateLevel as(String alias) {
        return new EscalateLevel(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EscalateLevel as(Name alias) {
        return new EscalateLevel(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EscalateLevel rename(String name) {
        return new EscalateLevel(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EscalateLevel rename(Name name) {
        return new EscalateLevel(name, null);
    }
}
